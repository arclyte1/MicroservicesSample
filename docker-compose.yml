version: '3.10'

services:

  'film-session':
    image: 'film-session'
    build: 
      context: ./film_session
      cache_to:
        - type=local,dest=data/cache
    depends_on:
      'film-session-db':
        condition: service_healthy
    environment:
      - POSTGRES_URL=postgresql://film-session-db:5432/root
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123
    ports:
      - 8080:8080
  
  'film-session-db':
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: '5s'
      start_period: '5s'
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123

  'client':
    image: 'client'
    build: 
      context: ./client
      cache_to:
        - type=local,dest=data/cache
    depends_on:
      'client-db':
        condition: service_healthy
    environment:
      - POSTGRES_URL=postgresql://client-db:5432/root
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123
      - AUTH_URL=http://keycloak:8080/realms/master/protocol/openid-connect/userinfo
    ports:
      - 8081:8080
  
  'client-db':
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: '5s'
      start_period: '5s'
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=123
  
  postgresql:
    image: docker.io/bitnami/postgresql:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    volumes:
      - 'postgresql_data:/bitnami/postgresql'

  keycloak:
    image: docker.io/bitnami/keycloak:latest
    ports:
      - "8082:8080"
    environment:
      - KEYCLOAK_CREATE_ADMIN_USER=true
    depends_on:
      - postgresql

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-local-config.yaml:/etc/loki/config.yaml

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./config/promtail.yaml:/etc/promtail/docker-config.yaml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/docker-config.yaml
    depends_on:
      - loki
    
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    volumes:
      - ./data/grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"

volumes:
  postgresql_data:
    driver: local