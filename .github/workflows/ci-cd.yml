name: CI/CD pipline

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run unit tests
        run: |
          cd ./film_session
          sudo docker build . -f DockerfileUnitTests

      - name: Prepare e2e tests
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          pip install -r tests/requirements.txt
          docker-compose up -d --build
          sleep 20

      - name: Run e2e tests
        run: |
          pytest ./tests/e2e.py

  # build-and-push-dockerhub:
  #   name: Build and push to DockerHub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build docker image
  #       run: |
  #         docker build ./film_session -f ./film_session/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/film-session:latest

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3.0.0
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Push tag to DockerHub
  #       run: |
  #         docker push ${{ secrets.DOCKER_USERNAME }}/film-session:latest

  # build-and-push-yandex-cloud:
  #   name: Build and push to YandexCloud Registry
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Build docker image
  #       run: |
  #         docker build ./client -f ./client/Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/client:latest

  #     - name: Login to YC Registry
  #       uses: docker/login-action@v3.0.0
  #       with:
  #         registry: cr.yandex
  #         username: json_key
  #         password: ${{ secrets.YC_KEYS }}

  #     - name: Push tag YC Registry
  #       run: |
  #         docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/client:latest

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: [build-and-push-yandex-cloud]
  #   steps:
  #     - name: Deploy serverless container
  #       uses: yc-actions/yc-sls-container-deploy@v1
  #       with:
  #         yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
  #         container-name: ${{ secrets.YC_CONTAINER_NAME }}
  #         folder-id: ${{ secrets.YC_FOLDER_ID }}
  #         revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/client:latest
  #         revision-service-account-id: ${{ secrets.YC_SA_ID }}
